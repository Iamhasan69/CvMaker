Important Questions for C Programming
1. Basic Concepts

1. What are the main features of C programming language?
2. Explain the structure of a C program.
3. What are variables in C? List the rules for naming a variable.
4. What are data types in C? Explain with examples.
5. What are constants? How are they different from variables?

2. Control Structures

1. Differentiate between if-else and switch statements with examples.
2. Write a program to find the largest of three numbers using if-else.
3. Explain the syntax and usage of the for, while, and do-while loops.
4. Write a program to print the Fibonacci series up to n terms using a loop.
5. What are break and continue statements? Explain with examples.

3. Functions

1. What is the difference between a library function and a user-defined function?
2. Explain actual and formal arguments with an example.
3. Write a program to find the factorial of a number using recursion.
4. What is the purpose of the return statement in a function?
5. Explain the concept of call by value and call by reference.

4. Arrays and Strings
1. Explain how arrays are declared and initialized in C. Provide examples.
2. Write a program to find the largest element in an array.
3. What is the difference between one-dimensional and two-dimensional arrays?
4. Write a program to concatenate two strings without using library functions.
5. Explain any four string-handling functions with examples.

5. Pointers

1. What is a pointer in C? How is it declared?
2. Write a program to swap two numbers using pointers.
3. Explain the relationship between arrays and pointers.
4. What is NULL pointer? Explain its use.
5. What are dangling pointers? How can they be avoided?

6. Structures and File Handling

1. What is a structure in C? How is it different from an array?
2. Write a program to store and display information of 5 students using structures.
3. Explain different file-opening modes in C.
4. Write a program to read and write data into a file.
5. What is the difference between text files and binary files?

7. Advanced Topics

1. Explain dynamic memory allocation in C. Provide examples using malloc() and free().
2. What is the use of the sizeof operator? Provide examples.
3. Write a program to implement a simple calculator using functions.
4. What is a preprocessor directive? Explain #define and #include.
5. What are command-line arguments? Write a program to demonstrate their use.

8. Miscellaneous

1. Explain the use of the typedef keyword with examples.
2. Write a program to reverse a given string.
3. Explain the difference between stack and heap memory allocation.
4. What is an infinite loop? Provide an example.
5. Write a program to find whether a number is prime or not.